name: CI

on:
  push:
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  build-for-lpg-web:
    name: Build for lpg-web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lpg-web
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/lpg-web
          token: ${{ secrets.GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "8"
          run_install: false

      - name: Get pnpm store directory
        run: |
          echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Set up pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies and build
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lpg-web-artifact-${{ runner.os }}
          path: dist

  build-for-lpg:
    name: Build for lpg
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Build with Maven
        run: |
          mvn versions:set -B -DremoveSnapshot -DgenerateBackupPoms=false
          mvn clean package -B -DskipTests
          cp target/*.jar .
          cp ~/.m2/repository/com/alibaba/transmittable-thread-local/**/*.jar .

      - name: Set up Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lpg-artifact-${{ runner.os }}
          path: |
            *.jar

  build-for-docker:
    name: Build for Docker
    runs-on: ubuntu-latest
    needs:
      - build-for-lpg-web
      - build-for-lpg
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: docker_meta
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/lpg
            ghcr.io/${{ github.repository_owner }}/lpg
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: docker_buildx

      - name: Download lpg-web artifact
        uses: actions/download-artifact@v4
        with:
          pattern: lpg-web-artifact-*
          path: web

      - name: Download lpg artifact
        uses: actions/download-artifact@v4
        with:
          pattern: lpg-artifact-*
          path: server

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386
          push: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha
